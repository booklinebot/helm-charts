apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mysql
{{ include "common.labels" . | indent 4 }}
  name: mysql
  namespace: {{ dig "global" "db" "namespace" .Release.Namespace (.Values | merge (dict)) | quote }}
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      name: mysql
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql 
          image: {{ .Values.mysql.image }}
          args:
            - "--ignore-db-dir=lost+found"
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: MYSQL_PASSWORD
            - name: MYSQL_USER
              value: {{ .Values.mysql.user }}
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
                - --protocol
                - tcp
            failureThreshold: 10
            timeoutSeconds: 5
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-claim
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: mysql-claim
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
