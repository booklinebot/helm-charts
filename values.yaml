global:
  # if defined, create and/or reference db and monitoring services in the specified namespace;
  # otherwise they create and/or referenced them in whatever the .Release namespace is
  dbNamespace: 
  monitoringNamespace:

db: 
  # if true, create the db subchart
  enabled: true
monitoring: 
  # if true, create the monitoring subchart
  enabled: true 

# (required) name of cloud provider: azure, aws, digitalocean, gcp, or none 
cloud:

# set this to "1" if you are deploying on AWS and you are using IMDSv2
awsUseIMDSv2:

# basic information that applies to all jambonz Node.js app
jambonz: 
  # a short identifier for the cluster, needed if multiple jambonz clusters will share the same redis
  clusterId: 

# these values direct which nodepool the SBC sip and rtp pods will be placed in.
# these pods have to be in special nodepools that use host network binding due to the nature
# of sip signaling and the current lack of support for sip in ingress controllers.
#
#   Note: if you want to put sip and rtp into a single nodepool (e.g. to save cost on a smaller deployment)
#   then set both labels below to the same value and both tolerations below to the same value  
#   and use those values when creating your single edge-facing nodepool when you spin up the cluster.
#   (But, for production deployments, separate nodepools are recommended for sip and rtp, and this is the default setup below).
sbc: 
  sip: 
    nodeSelector: 
      label: voip-environment 
      value: sip
    toleration: sip
  rtp: 
    nodeSelector: 
      label: voip-environment 
      value: rtp
    toleration: rtp
    
# information used by the Node.js apps to write statsd to a telegraf listening instance
stats: 
  enabled: "1"
  host: telegraf
  port: "8125"
  protocol: tcp 
  telegraf: "1"
  sampleRate: "1"

# configuration information for rtpengine
rtpengine: 
  image: jambonz/rtpengine:0.1.0 
  imagePullPolicy: Always
  sidecarImage: jambonz/rtpengine-sidecar:0.7.3
  sidecarImagePullPolicy: Always
  dtmfLogPort:  "22223"
  loglevel: "5"
  homerId: "11"

# used by sidecar apps in sbc-sip and feature-server to connect locally to drachtio server
drachtio: 
  image: drachtio/drachtio-server:0.8.14
  host: "127.0.0.1"
  port: "9022"
  homerId: "10"

# freeswitch configuration
freeswitch: 
  image: drachtio/drachtio-freeswitch-mrf:0.4.1
  imagePullPolicy: Always

# mysql configuration used by Node.js app that need to connect
mysql: 
  image: mysql:5.7
  host: mysql 
  database: jambones
  user: jambones 
  storage: 10Gi

# redis configuration used by Node.js app that need to connect
redis: 
  image: redis:alpine
  host: redis 
  port: "6379"

# configuration for jambonz-api-server
api: 
  image: jambonz/api-server:0.7.4-rc1
  imagePullPolicy: Always
  httpPort: "3000"
  # (required) hostname for the jambonz port ingress
  hostname:

# jambonz-webapp configuration
webapp: 
  image: jambonz/webapp:0.7.3
  imagePullPolicy: Always
  
  # (required) hostname for the jambonz port ingress
  hostname: 

# 
smpp:
  image: jambonz/smpp-esme:0.7.3
  imagePullPolicy: Always

# sbc-options-handler configuration
sbcOptionsHandler: 
  image: jambonz/sbc-options-handler:0.7.3
  imagePullPolicy: Always

# sbc-inbound configuration
sbcInbound: 
  image: jambonz/sbc-inbound:0.7.3
  imagePullPolicy: Always
  drachtioPort: "4000"

# sbc-outbound configuration
sbcOutbound: 
  image: jambonz/sbc-outbound:0.7.3
  imagePullPolicy: Always
  drachtioPort: "4000"

# sbc-registrar configuration
sbcRegistrar: 
  image: jambonz/sbc-registrar:0.7.3
  imagePullPolicy: Always
  drachtioPort: "4000"

# sbc-call-router configuration
sbcCallRouter: 
  image: jambonz/sbc-call-router:0.7.3
  imagePullPolicy: Always
  httpPort: "3000"

# feature-server configuration
featureServer: 
  image: jambonz/feature-server:0.7.4-rc1
  imagePullPolicy: Always
  httpPort: "3000"
  drachtioConnection: "localhost:9022:cymru"
  freeswitchConnection: "localhost:8021:JambonzR0ck$"

# sbc-sip configuration
sbcSip: 
  loglevel: info 
  sofiaLoglevel: "3"

# sidecar to wait for database up
dbWaiter:
  image: d3fk/kubectl:v1.18
